<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="AppPath.Mapper" >

	<select id="getAppPaths" parameterType="Map" resultType="hashmap" useCache="false">
		select ID, SADD,EADD, to_char(SDATE, 'yyyy-MM-dd hh24:mi:ss') SDATE, to_char(EDATE, 'yyyy-MM-dd hh24:mi:ss') EDATE,SLON,SLAT,ELON,ELAT,DISTANCE,COSTTIME,to_char(PROCE) PROCE,KPI1,KPI2,KPI3,KPI,SUGGEST, to_char(UPLOADTIME, 'yyyy-MM-dd hh24:mi:ss') UPLOADTIME,USER_ID,STATU
		from APP_PATH t1 where statu = '0'
		order by UPLOADTIME desc
	</select>
	
	<select id="getAppPathsCount" parameterType="Map" resultType="hashmap" flushCache="false" useCache="false">
		select count(*) count from APP_PATH t1  where statu = '0'
	</select>
	
  	<select id="searchAppPath" parameterType="Map" resultType="hashmap" useCache="false">
		select id, sadd, eadd, distance, costtime, to_char(uploadtime, 'yyyy-MM-dd hh24:mi:ss') uploadtime, distance, costtime,kpi1, kpi2, kpi3, kpi
		from app_path t1 
		where user_id = #{userId} and statu = #{statu} 
		order by uploadtime desc
	</select>

	<select id="searchAppPathCount" parameterType="Map" resultType="hashmap" flushCache="false" useCache="false">
		select count(*)
		from app_path t1 
		where user_id = #{userId} and statu = #{statu} 
	</select>

	<select id="queryAppPath" parameterType="Map" resultType="hashmap" flushCache="false" useCache="false">
		select id, sadd, eadd, to_char(sdate, 'yyyy-MM-dd hh24:mi:ss') sdate, to_char(edate, 'yyyy-MM-dd hh24:mi:ss') edate, slon, slat, elon, elat, distance, costtime, to_char(proce) proce, kpi1, kpi2, kpi3, kpi, suggest, to_char(uploadtime, 'yyyy-MM-dd hh24:mi:ss') uploadtime, user_id, statu  
		from app_path 
		where id = #{id} 
	</select>

	<insert id="saveAppPath" parameterType="Map" >
	    insert into app_path (id, sadd, sdate, slon, slat, eadd, edate, elon, elat, distance, costtime, proce, kpi1, kpi2, kpi3, kpi, suggest, uploadtime, user_id, statu )
		values (#{id}, #{sadd}, to_date(#{sdate}, 'yyyy-MM-dd hh24:mi:ss'), #{slon}, #{slat}, #{eadd}, to_date(#{edate}, 'yyyy-MM-dd hh24:mi:ss'), #{elon}, #{elat}, #{distance}, #{costtime}, #{proce}, #{kpi1}, #{kpi2}, #{kpi3}, #{kpi}, #{suggest}, sysdate, #{user_id}, #{statu} )
	</insert>

	<select id="deleteAppPath" parameterType="Map" flushCache="false" useCache="false">
		update app_path set statu=#{statu} where id = #{id} 
	</select>


  <!-- 
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from WALK.APP_EVALUATION
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from WALK.APP_EVALUATION
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.app.domain.AppEvaluation" >
    insert into WALK.APP_EVALUATION (ID, ADDRESS, EVAL_TYPE, 
      EVAL_CONTENT, USER_ID, UPLOADTIME, 
      LONGITUDE, LATITUDE, STATU
      )
    values (#{id,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{evalType,jdbcType=VARCHAR}, 
      #{evalContent,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{uploadtime,jdbcType=TIMESTAMP}, 
      #{longitude,jdbcType=VARCHAR}, #{latitude,jdbcType=VARCHAR}, #{statu,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.app.domain.AppEvaluation" >
    insert into WALK.APP_EVALUATION
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="address != null" >
        ADDRESS,
      </if>
      <if test="evalType != null" >
        EVAL_TYPE,
      </if>
      <if test="evalContent != null" >
        EVAL_CONTENT,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="uploadtime != null" >
        UPLOADTIME,
      </if>
      <if test="longitude != null" >
        LONGITUDE,
      </if>
      <if test="latitude != null" >
        LATITUDE,
      </if>
      <if test="statu != null" >
        STATU,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="evalType != null" >
        #{evalType,jdbcType=VARCHAR},
      </if>
      <if test="evalContent != null" >
        #{evalContent,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="uploadtime != null" >
        #{uploadtime,jdbcType=TIMESTAMP},
      </if>
      <if test="longitude != null" >
        #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null" >
        #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="statu != null" >
        #{statu,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.app.domain.AppEvaluation" >
    update WALK.APP_EVALUATION
    <set >
      <if test="address != null" >
        ADDRESS = #{address,jdbcType=VARCHAR},
      </if>
      <if test="evalType != null" >
        EVAL_TYPE = #{evalType,jdbcType=VARCHAR},
      </if>
      <if test="evalContent != null" >
        EVAL_CONTENT = #{evalContent,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="uploadtime != null" >
        UPLOADTIME = #{uploadtime,jdbcType=TIMESTAMP},
      </if>
      <if test="longitude != null" >
        LONGITUDE = #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null" >
        LATITUDE = #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="statu != null" >
        STATU = #{statu,jdbcType=CHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.app.domain.AppEvaluation" >
    update WALK.APP_EVALUATION
    set ADDRESS = #{address,jdbcType=VARCHAR},
      EVAL_TYPE = #{evalType,jdbcType=VARCHAR},
      EVAL_CONTENT = #{evalContent,jdbcType=VARCHAR},
      USER_ID = #{userId,jdbcType=VARCHAR},
      UPLOADTIME = #{uploadtime,jdbcType=TIMESTAMP},
      LONGITUDE = #{longitude,jdbcType=VARCHAR},
      LATITUDE = #{latitude,jdbcType=VARCHAR},
      STATU = #{statu,jdbcType=CHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
   -->
</mapper>